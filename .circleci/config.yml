# CircleCI v2 Config
version: 2

defaults_working_directory: &defaults_working_directory
  working_directory: /home/circleci/project

defaults_docker_node: &defaults_docker_node
  docker:
    - image: circleci/node:lts

defaults_docker_helm_kube: &defaults_docker_helm_kube
  docker:
    - image: hypnoglow/kubernetes-helm

defaults_build_docker_login: &defaults_build_docker_login
  name: Login to Docker Hub
  command: |
    docker login -u $DOCKER_USER -p $DOCKER_PASS $DOCKER_ORG
defaults_build_docker_test: &defaults_build_docker_test
  name: Build Docker test image
  command: |
    echo "Building Docker image: test"
    docker build --pull -t $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:test .
defaults_build_docker_build: &defaults_build_docker_build
  name: Build Docker $CIRCLE_TAG image
  command: |
    echo "Building Docker image: $CIRCLE_TAG"
    docker build --pull -t $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG .
defaults_build_docker_build_release: &defaults_build_docker_build_release
  name: Build Docker $RELEASE_TAG image
  command: |
    echo "Building Docker image: $RELEASE_TAG"
    docker build --pull -t $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$RELEASE_TAG .
defaults_build_docker_publish: &defaults_build_docker_publish
  name: Publish Docker image $CIRCLE_TAG & Latest tag to Docker Hub
  command: |
    echo "Publishing $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG"
    docker push $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
defaults_build_docker_publish_release: &defaults_build_docker_publish_release
  name: Publish Docker image $RELEASE_TAG tag to Docker Hub
  command: |
    echo "Publishing $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$RELEASE_TAG"
    docker push $DOCKER_ORG/$CIRCLE_PROJECT_REPONAME:$RELEASE_TAG
defaults_deploy_configure_helm: &defaults_deploy_configure_helm
  name: Configure Helm
  command: |
    helm init --client-only
jobs:
  test_unit:
    <<: *defaults_working_directory
    <<: *defaults_docker_node
    steps:
      - checkout
      - run:
          name: install-npm-dependencies
          command: cd src && npm ci
      - run:
          name: audit-dependencies
          command: cd src && npm audit
      - run:
          name: lint
          command: cd src && npm run lint
      - run:
          name: test
          command: cd src && npm run test
  build_docker:
    machine: true
    # <<: *default_env
    steps:
      - checkout
      - run:
          <<: *defaults_build_docker_login
      - run:
          <<: *defaults_build_docker_test
  build_and_publish_docker:
    machine: true
    # <<: *default_env
    steps:
      - checkout
      - run:
          name: setup environment vars for LATEST release
          command: |
            echo 'export RELEASE_TAG=$RELEASE_TAG_PROD' >> $BASH_ENV
      - run:
          <<: *defaults_build_docker_login
      - run:
          <<: *defaults_build_docker_build
      - run:
          <<: *defaults_build_docker_build_release
      - run:
          <<: *defaults_build_docker_publish
      - run:
          <<: *defaults_build_docker_publish_release

workflows:
  version: 2
  test_docker_helm:
    jobs:
      - test_unit:
          context: org-global
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - build_docker:
          context: org-global
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - build_and_publish_docker:
          context: org-global
          requires:
            - test_unit
            - build_docker
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
